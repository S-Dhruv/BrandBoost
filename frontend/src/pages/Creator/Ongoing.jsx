import React, { useContext, useRef, useEffect } from 'react';
import { SocketContext } from '../../util/SocketProvider';
import { useNavigate } from 'react-router-dom';
import { toast } from "react-toastify";
import OngoingNew from './OngoingNew';
import  WaveDecoration  from "../../components/WaveDecoration";
import  ModernNavbar from "../../components/ModernNavbar";

const Ongoing = () => {
  const nav = useNavigate();
  const givenRoomCode = useRef(null);
  const { socket, connected } = useContext(SocketContext);

  useEffect(() => {
    if (!socket) return;
    socket.on("error-message", ({ message }) => {
      toast.error("Oops! Looks like you are not authorized");
      console.log("Error here");
      nav("/creator/dashboard/ongoing");
    });
    if (!connected) {
      console.log("Socket not connected");
    }
  }, [connected]);

  const handleJoinRoom = () => {
    if (!connected || !socket) {
      console.error("Cannot join room: Socket not connected");
      return;
    }

    const room = givenRoomCode.current.value;
    if (room) {
      socket.emit("join-room", { room });
      localStorage.setItem("room", room);
      console.log(`Joining room: ${room}`);
      nav("/creator/dashboard/ongoing/workspace");
    } else {
      console.error("Room code is required");
      nav("/creator/dashboard/ongoing");
    }
  };

  return (

    <div className="min-h-screen bg-[#081A42] flex items-center justify-center gap-48 relative overflow-hidden">
      {/* Animated background elements */}
      <ModernNavbar />
      <WaveDecoration />
      

      {/* Main content */}
      <div className="relative z-10 w-full max-w-md px-4">
        <div className="bg-white p-8 rounded-3xl shadow-lg border border-[#328AB0]/20">
          <div className="mb-8 text-center">
            <h2 className="text-4xl font-bold bg-gradient-to-r from-[#42A4E0] to-[#1D78A0] text-transparent bg-clip-text">
              Join Room
            </h2>
            <p className="mt-2 text-[#081A42]/60">
              Enter the room code generated by the job you are accepted for
            </p>
          </div>

          <form className="space-y-6">
            <div className="relative group">
              <input
                type="text"
                placeholder="Enter your room code"
                ref={givenRoomCode}
                disabled={!connected}
                className={`w-full px-5 py-4 rounded-2xl bg-[#F9FAFB] border-2 
                  ${connected 
                    ? "border-[#328AB0]/20 text-[#081A42] placeholder-[#A1C6D2] focus:outline-none focus:border-[#42A4E0] group-hover:border-[#42A4E0]/50" 
                    : "border-gray-200 bg-gray-100 cursor-not-allowed text-gray-400"
                  } transition-all duration-300`}
              />
              <div className="absolute inset-0 rounded-2xl bg-gradient-to-r from-[#42A4E0]/20 to-[#1D78A0]/20 opacity-0 group-hover:opacity-100 transition-opacity duration-300 -z-10 blur"></div>
            </div>

            <button
              type="button"
              onClick={handleJoinRoom}
              disabled={!connected}
              className={`w-full py-4 rounded-2xl font-medium transition-all duration-300
                ${connected
                  ? "bg-gradient-to-r from-[#42A4E0] to-[#1D78A0] text-white hover:from-[#1D78A0] hover:to-[#42A4E0]"
                  : "bg-gray-400 text-gray-200 cursor-not-allowed"
                }`}
            >
              Join Room
            </button>
          </form>

          {!connected && (
            <div className="mt-6 p-4 rounded-2xl bg-red-50 border border-red-100">
              <p className="text-red-600 text-sm text-center">
                Not connected to server. Please check your authentication.
              </p>
            </div>
          )}

          <p className="mt-8 text-center text-[#A1C6D2]">
            Don't have a room code?{' '}
            <span className="text-[#42A4E0] font-medium">
              Contact the job provider
            </span>
          </p>
        </div>
      </div>
      <OngoingNew />
    </div>
  );
};

export default Ongoing;
